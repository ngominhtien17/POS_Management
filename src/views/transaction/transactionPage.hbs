<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Thông tin giao dịch</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 0;
        }
        .container {
            max-width: 900px;
            margin: 50px auto;
            padding: 30px;
            border-radius: 8px;
            background-color: white;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        h3 {
            text-align: center;
            color: #333;
            margin-bottom: 30px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        .form-group label {
            font-weight: bold;
            margin-bottom: 5px;
            display: block;
        }
        .form-control, .form-control select {
            width: 100%;
            padding: 12px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 6px;
        }
        .form-control:focus {
            border-color: #007bff;
        }
        .btn {
            width: 100%;
            padding: 12px;
            background-color: #007bff;
            color: white;
            font-size: 18px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
        }
        .btn:hover {
            background-color: #0056b3;
        }
        #paymentSummary {
            margin-top: 30px;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 6px;
            background-color: #f9f9f9;
        }
        #qrCode img {
            width: 150px;
        }
        .alert {
            padding: 15px;
            margin-top: 20px;
            border-radius: 6px;
        }
        .alert.error {
            background-color: #f8d7da;
            color: #721c24;
        }
        .alert.success {
            background-color: #d4edda;
            color: #155724;
        }
        .print-container {
            display: none;
        }
        .remove-product-button{
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
<div class="container">
    <h3>Thông tin giao dịch</h3>
    <form id="transactionForm">
        <div class="form-group">
            <label for="customerName">Tên khách hàng:</label>
            <input type="text" class="form-control" id="customerName" name="customerName" required>
        </div>

        <div class="form-group">
            <label for="customerPhone">Điện thoại:</label>
            <input type="text" class="form-control" id="customerPhone" name="customerPhone" required>
        </div>

        <h4>Danh sách sản phẩm</h4>
        <div id="productList">
            <div class="product-item">
                <div class="form-group">
                    <label for="productName">Tên sản phẩm:</label>
                    <input type="text" class="form-control" name="productName[]" required>
                </div>

                <div class="form-group">
                    <label for="productQuantity">Số lượng:</label>
                    <input type="number" class="form-control" name="productQuantity[]" min="1" required>
                </div>

                <div class="form-group">
                    <label for="productPrice">Giá mỗi sản phẩm (VND):</label>
                    <input type="number" class="form-control" name="productPrice[]" required>
                </div>
            </div>
        </div>

        <button type="button" class="btn btn-secondary" id="addProductButton">Thêm sản phẩm</button>

        <div class="form-group">
            <label for="totalAmount">Tổng số tiền:</label>
            <input type="number" class="form-control" id="totalAmount" name="totalAmount" required readonly>
        </div>

        <div class="form-group">
            <label for="receivedAmount">Số tiền thanh toán:</label>
            <input type="number" class="form-control" id="receivedAmount" name="receivedAmount" required>
        </div>

        <div class="form-group">
            <label for="paymentMethod">Phương thức thanh toán:</label>
            <select class="form-control" id="paymentMethod" name="paymentMethod" required>
                <option value="momo">Momo</option>
                <option value="cash">Tiền mặt</option>
            </select>
        </div>

        <button type="submit" class="btn" id="paymentButton">Xác nhận thanh toán</button>

        <div id="paymentMessage" style="display:none; color: green;">
            Đã thanh toán
        </div>
    </form>

    <div id="paymentSummary"></div>
    <button type="button" class="btn" id="printButton" style="display:none;">In hóa đơn</button>
</div>

<div class="print-container" id="printArea">
    <h2>Thông tin giao dịch</h2>
    <div id="printSummary"></div>
</div>


<script>
    // Hàm tính tổng tiền
    function calculateTotal() {
        let totalAmount = 0;

        const productQuantities = document.getElementsByName('productQuantity[]');
        const productPrices = document.getElementsByName('productPrice[]');

        for (let i = 0; i < productQuantities.length; i++) {
            const quantity = parseInt(productQuantities[i].value) || 0;
            const price = parseFloat(productPrices[i].value) || 0;

            totalAmount += quantity * price;
        }

        document.getElementById('totalAmount').value = totalAmount
        calculateBalance(); // Cập nhật lại số tiền thối mỗi khi tổng tiền thay đổi
    }

    // Hàm tính số tiền còn lại (số tiền thanh toán - tổng tiền)
    function calculateBalance() {
        const totalAmount = parseFloat(document.getElementById('totalAmount').value.replace(/,/g, '')) || 0;
        const receivedAmount = parseFloat(document.getElementById('receivedAmount').value.replace(/,/g, '')) || 0;

        const balance = receivedAmount - totalAmount;


        document.getElementById('amountRemaining').value = balance.toLocaleString('vi-VN');
    }

    // Lắng nghe sự kiện thay đổi của số lượng và giá sản phẩm
    document.getElementById('productList').addEventListener('input', function() {
        calculateTotal();
    });

    // Lắng nghe sự kiện thay đổi của số tiền thanh toán
    document.getElementById('receivedAmount').addEventListener('input', function() {
        calculateBalance();
    });

    // Thêm sự kiện cho nút "Thêm sản phẩm"
    document.getElementById('addProductButton').addEventListener('click', function() {
        const productList = document.getElementById('productList');
        const newProductItem = document.createElement('div');
        newProductItem.classList.add('product-item');

        newProductItem.innerHTML = `
            <div class="form-group">
                <label for="productName">Tên sản phẩm:</label>
                <input type="text" class="form-control" name="productName[]" required>
            </div>

            <div class="form-group">
                <label for="productQuantity">Số lượng:</label>
                <input type="number" class="form-control" name="productQuantity[]" min="1" required>
            </div>

            <div class="form-group">
                <label for="productPrice">Giá mỗi sản phẩm (VND):</label>
                <input type="number" class="form-control" name="productPrice[]" required>
            </div>
            <button type="button" class="btn btn-danger remove-product-button">Xóa</button>
        `;

        productList.appendChild(newProductItem);

        // Xử lý sự kiện xóa sản phẩm
        newProductItem.querySelector('.remove-product-button').addEventListener('click', function() {
            newProductItem.remove();
            calculateTotal();
        });

        newProductItem.querySelector('[name="productQuantity[]"]').addEventListener('input', calculateTotal);
        newProductItem.querySelector('[name="productPrice[]"]').addEventListener('input', calculateTotal);

        calculateTotal();
    });

    // Sự kiện xác nhận thanh toán
    document.getElementById("paymentButton").addEventListener("click", async (event) => {
        event.preventDefault();

        const customerName = document.getElementById("customerName").value;
        const customerPhone = document.getElementById("customerPhone").value;
        const totalPrice = parseFloat(document.getElementById("totalAmount").value.replace(/,/g, '')) || 0;
        const receivedAmount = parseFloat(document.getElementById("receivedAmount").value.replace(/,/g, '')) || 0;
        const paymentMethod = document.getElementById("paymentMethod").value;
        const remain = receivedAmount - totalPrice;

        if (remain < 0) {
            alert("Số tiền thanh toán không đủ!");
            return;
        }

        const orderData = {
            orderId: '674b2f997e3ac0e850bfd73e',
            paymentDate: new Date().toISOString(),
            receive: receivedAmount,
            remain: remain,
        };

        try {
            const res = await fetch('/payment/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(orderData),
            });

            const data = await res.json();
            if (data.success) {
                alert("Thanh toán thành công!");
                document.getElementById('paymentSummary').innerHTML = `
                    <h4>Thông tin thanh toán:</h4>
                    <p>Tên khách hàng: ${customerName}</p>
                    <p>Điện thoại: ${customerPhone}</p>
                    <p>Tổng tiền: ${totalPrice.toLocaleString()} VND</p>
                    <p>Số tiền thanh toán: ${receivedAmount.toLocaleString()} VND</p>
                    <p>Phương thức thanh toán: ${paymentMethod}</p>
                    <p>Số tiền còn lại: ${remain.toLocaleString()} VND</p>
                `;
                document.getElementById('paymentMessage').style.display = 'block';
                document.getElementById('printButton').style.display = 'block';
            } else {
                alert("Đã xảy ra lỗi, vui lòng thử lại!");
            }
        } catch (error) {
            console.error("Lỗi kết nối:", error);
            alert("Không thể kết nối đến máy chủ, vui lòng thử lại sau!");
        }
    });

    // Sự kiện in hóa đơn
    document.getElementById('printButton').addEventListener('click', function() {
        const printSummary = document.getElementById('paymentSummary').innerHTML;
        const printWindow = window.open('', '', 'height=600,width=800');
        printWindow.document.write('<html><head><title>In hóa đơn</title></head><body>');
        printWindow.document.write(printSummary);
        printWindow.document.write('</body></html>');
        printWindow.document.close();
        printWindow.print();
    });
</script>

</body>
</html>
